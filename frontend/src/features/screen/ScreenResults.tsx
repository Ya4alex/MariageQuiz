import ReactConfetti from "react-confetti";
import { useWindowSize } from "react-use";
import type { ScreenTablesStateEvent } from "../../data/events";
import type { category } from "../../data/models";
import "./ScreenResults.css";

interface ScreenResultsProps {
  screenState: ScreenTablesStateEvent;
}

const categoryMorphMap = {
  stepa: {
    short: "–°—Ç—ë–ø–∞",
    full: (
      <>
        <b style={{ fontSize: "1.5em" }}>üéâ</b> –õ—É—á—à–µ –≤—Å–µ—Ö –∑–Ω–∞—é—Ç –°—Ç—ë–ø—É
      </>
    ),
  },
  katya: {
    short: "–ö–∞—Ç—è",
    full: (
      <>
        <b style={{ fontSize: "1.5em" }}>üéä</b> –õ—É—á—à–µ –≤—Å–µ—Ö –∑–Ω–∞—é—Ç –ö–∞—Ç—é
      </>
    ),
  },
  stepa_katya: {
    short: "–ö–∞—Ç—è –∏ –°—Ç—ë–ø–∞",
    full: (
      <>
        <b style={{ fontSize: "1.5em" }}>‚ú®</b> –õ—É—á—à–µ –≤—Å–µ—Ö –∑–Ω–∞—é—Ç –ö–∞—Ç—é –∏ –°—Ç—ë–ø—É
      </>
    ),
  },
};

export const ScreenResults = ({ screenState }: ScreenResultsProps) => {
  const results = screenState.results;
  const { width, height } = useWindowSize();

  if (!results) {
    return (
      <div>
        <h1>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã</h1>
        <p>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∫–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.</p>
      </div>
    );
  }

  return (
    <>
      <ReactConfetti width={width} height={height} numberOfPieces={600} recycle={true} />
      <div className="screen-reslults-base-container" style={{ position: "relative" }}>
        <h1 className="screen-reslults-title-h1">–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏</h1>
        <div className="screen-reslults-list-container">
          <ol className="screen-reslults-list">
            {results.winers.map((table, idx) => (
              <li key={table.table_id}>
                <div className="screen-results-title">
                  <b>
                    {idx === 0 ? "ü•á " : idx === 1 ? "ü•à " : idx === 2 ? "ü•â " : ""}
                    –°—Ç–æ–ª ‚Ññ {table.table_id} {table.table_name}
                  </b>
                  <span>‚Äî</span>
                  <span>{table.score} –±–∞–ª–ª–æ–≤</span>
                </div>
                <div>
                  {Object.entries(table.categories)
                    .sort((a, b) => b[1] - a[1])
                    .map(([cat, score]) => (
                      <span key={cat} className="screen-result-info screen-result-box-info">
                        <b>{categoryMorphMap[cat as category]["short"]}:</b> {score}
                      </span>
                    ))}
                </div>
              </li>
            ))}
          </ol>
        </div>
        <h2>–õ—É—á—à–∏–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º</h2>
        <ul className="screen-results-categories-list">
          {Object.entries(results.category_winners).map(([cat, table]) => (
            <li key={cat}>
              <b>{categoryMorphMap[cat as category]["full"]}:</b>{" "}
              {table ? (
                <>
                  <span>
                    –°—Ç–æ–ª ‚Ññ {table.table_id} {table.table_name}
                  </span>
                  <div className="screen-result-info">
                    {table.categories[cat as category]} –±–∞–ª–ª–æ–≤
                  </div>
                </>
              ) : (
                "–ù–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è"
              )}
            </li>
          ))}
        </ul>
      </div>
    </>
  );
};
